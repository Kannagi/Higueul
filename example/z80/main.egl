
// -----------------------------------------------------------------------------
// Definitions

.define NOS_STATEBIT_SFX_PLAYING 0x00

// -----------------------------------------------------------------------------
// main entry point, on Z80, entry point is $0000

.code 0x0000

proc _start:
{
	// theres no room for code, we are in the interrupt vector and address
	// $0000 is the reset ISR. Let's jump somewhere else.
	jump main:
}

// -----------------------------------------------------------------------------
// Some vacriables. We shouldn't define variables here, but this part of the
// interrupt vector isn't used because the interrupt mode is 1.
.bss 0x10

uint8 NOS_sysMissedClock
uint8 NOS_state
uint16 SGA_selectedBank

.code 0x100

proc main:
{
	asm "di"

	asm "ld sp, 0x1FFF"

	asm "im 1"

	// acc = 24
	// NOS_sysMissedClock = 0
	// NOS_state = 0
	// SGA_selectedBank = 0
//
	// rb = 0
	// acc = rb
	// SGA_selectedBank = ra
	// rc = SGA_selectedBank
	// rb = 22
	idhl = 3
	rb = [idhl]

	SGA_selectedBank = NOS_state
	NOS_state = SGA_selectedBank
	asm "ei"
}

